// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }
// app/layout.tsx
'use client';
import { NavBarDemo } from "@/components/Navbar";
import { PrivyProvider } from '@privy-io/react-auth';
import { Geist } from "next/font/google";
import localFont from 'next/font/local';
import "./globals.css";


// Load fonts and bind them to CSS variables
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
  display: "swap",
});



const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",        
  variable: "--font-geist-mono",          
  weight: "100 900",                      
});

// ✅ No 'use client' — this must be a server component
export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html
      lang="en"
      className={`${geistSans.variable} ${geistMono.variable}`}
      suppressHydrationWarning
    >
      <body className="antialiased">
        <PrivyProvider
          appId="cmd38held021sju0mrvhz3v0v"
          config={{
            appearance: {
              theme: "dark",
              accentColor: "#676FFF",
              logo: "/svg/lock.png",
            },
            // Create embedded wallets for users who don't have a wallet
            embeddedWallets: {
              createOnLogin: "users-without-wallets",
            },
          }}
        >
          < NavBarDemo/>        
          {children}
        </PrivyProvider>
      </body>
    </html>
  );
}

